name: build
on:
  workflow_dispatch:

env:
  REGISTRY: "ghcr.io"
  OWNER: "jimboid"
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-24.04
    name: base-build
    outputs:
      tag: ${{ steps.envvars.outputs.tag }}
      path: ${{ steps.envvars.outputs.path }}
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Prepare env
        id: envvars
        run: |
          TAG="$(cat Dockerfile | grep "FROM" | cut -d':' -f2)-$(date +'%Y-%m-%d')"
          PATH="${{ env.REGISTRY }}/${{ env.OWNER }}/${{ env.IMAGE_NAME }}"
          echo "path=${PATH}" >> "$GITHUB_OUTPUT"
          echo "tag=${TAG}" >> "$GITHUB_OUTPUT"
          echo ${PATH}
          echo ${TAG}

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v3.4.0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3.9.0

      - name: Authenticate with GHCR
        id: ghcr-auth
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.BUILD_TOKEN}}

      - name: Build and push
        id: build-push
        uses: docker/build-push-action@v6.14.0
        with:
          platforms: linux/amd64,linux/arm64
          sbom: true
          push: true
          tags: |
            ${{ steps.envvars.outputs.path }}:latest
            ${{ steps.envvars.outputs.path }}:${{ steps.envvars.outputs.tag }}
          outputs: |
            type=image
            name=target
            annotation-index.org.opencontainers.image.source=https://github.com/jimboid/biosim-jupyterhub-base
            annotation-index.org.opencontainers.image.licenses=MIT
            annotation-index.org.opencontainers.image.description=A base container image derived from jupyterhub base containers with some extra utilities installed.

#  trigger:
#    needs: build
#    runs-on: ubuntu-24.04
#    strategy:
#      matrix:
#        repos: ["aiida-gpcr",
#                "aiida-lysozyme",
#                "basic-analysis",
#                "basic-statistics",
#                "beginners",
#                "clustering",
#                "codeentropy",
#                "docking",
#                "enhanced-sampling",
#                "equilibration",
#                "introamber",
#                "nemd",
#                "openff",
#                "pca",
#                "pdb2pqr",
#                "python",
#                "qmmm",
#                "structure-validation",
#                "ubiquitin-analysis"]
#    name: jupyterhub-${{ matrix.jupyter-base }}
#    steps:  
#      - name: Repository Dispatch Build Trigger
#        uses: peter-evans/repository-dispatch@v3
#        with:
#          token: ${{ secrets.BUILD_TOKEN }}
#          repository: jimboid/biosim-${{ matrix.repos }}-workshop
#          event-type: build    
#          client-payload: '{"tag": "${{ needs.build.outputs.tag }}"}'

